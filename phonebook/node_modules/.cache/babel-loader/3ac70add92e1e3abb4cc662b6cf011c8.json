{"ast":null,"code":"var _jsxFileName = \"/home/kakashi/Desktop/full-stack-open-2021/part-2/phonebook/src/App.js\";\nimport { useEffect, useState } from \"react\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport NumberService from './services/Numbers';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notification = ({\n  message\n}) => {\n  if (message === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"success\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState(0);\n  const [successMessage, setSuccessMessage] = useState(null);\n  useEffect(() => {\n    NumberService.getAll().then(response => {\n      setPersons(response);\n      console.log(response);\n    });\n  }, []);\n\n  const addName = event => {\n    event.preventDefault();\n    const names = persons.map(person => person.name);\n    console.log(names);\n\n    if (names.includes(newName)) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      console.log('you clicked', event.target);\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      };\n      NumberService.create(nameObject).then(response => {\n        setPersons(persons.concat(response));\n        setSuccessMessage(`Added ${nameObject.name}`);\n        setNewName('');\n        setNewNumber('');\n      });\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const handleDelete = (id, name) => {\n    if (window.confirm(`do you want to delete ${name}`)) {\n      NumberService.remove(id);\n    }\n  };\n\n  const nameToShow = persons ? persons : persons.filter(person => person.important === true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addName: addName,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newNumber: newNumber,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      nameToShow: nameToShow,\n      remove: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\nexport default App;","map":{"version":3,"sources":["/home/kakashi/Desktop/full-stack-open-2021/part-2/phonebook/src/App.js"],"names":["useEffect","useState","PersonForm","Persons","NumberService","Notification","message","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","successMessage","setSuccessMessage","getAll","then","response","console","log","addName","event","preventDefault","names","map","person","name","includes","alert","target","nameObject","number","create","concat","setTimeout","handleNameChange","value","handleNumberChange","handleDelete","id","window","confirm","remove","nameToShow","filter","important"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport NumberService from './services/Numbers'\nimport './index.css'\n\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return(\n    <div className=\"success\">\n    {message}\n  </div>\n  )\n}\n\nconst App =() => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState(0)\n  const [ successMessage, setSuccessMessage ] = useState (null)\n\n\n  useEffect(() => {\n    NumberService\n    .getAll()\n    .then(response => {\n      setPersons(response)\n      console.log(response);\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const names = persons.map(person => person.name)\n    console.log(names);\n  \n    if( names.includes(newName)) {\n      alert(`${newName} is already added to phonebook`)\n    }\n    else{\n      console.log('you clicked', event.target);\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    NumberService\n    .create(nameObject)\n    .then(response => {\n      setPersons(persons.concat(response))\n   setSuccessMessage( `Added ${nameObject.name}`)\n\n      setNewName('')\n    setNewNumber('')\n    })\n    setTimeout(() => {\n      setSuccessMessage(null)\n    },5000)\n    }\n    \n    \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n    console.log(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n    console.log(event.target.value);\n  }\n\n  const handleDelete = (id, name) => {\n    if(window.confirm(`do you want to delete ${name}`)) {\n      NumberService\n    .remove(id)\n    }\n  }\n\n  const nameToShow = persons\n  ? persons\n  : persons.filter(person=> person.important === true)\n\n\n \n  \n  return(\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={successMessage} />\n\n      <h3>add a new</h3>\n\n      <PersonForm addName={addName} \n        newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange}\n        />\n\n      <h2>Numbers</h2> \n     \n    <Persons nameToShow={nameToShow} remove={handleDelete} />\n    </div>\n  )\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}